(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-b3c4b43c"],{"0dda":function(e,t,n){},2061:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("el-tooltip",{attrs:{effect:"light"}},[n("div",{attrs:{slot:"content"},slot:"content"},[n("el-input",{attrs:{type:"textarea",rows:"8"},model:{value:e.wkt,callback:function(t){e.wkt=t},expression:"wkt"}})],1),n("el-button",{on:{click:function(t){return e.handleSetShape("wkt")}}},[e._v("设置区域wkt")])],1),n("el-divider",{attrs:{direction:"vertical"}}),n("el-tooltip",{attrs:{effect:"light"}},[n("div",{attrs:{slot:"content"},slot:"content"},[n("el-input",{attrs:{type:"textarea",rows:"8"},model:{value:e.geoJson,callback:function(t){e.geoJson=t},expression:"geoJson"}})],1),n("el-button",{on:{click:function(t){return e.handleSetShape("json")}}},[e._v("设置区域geoJson")])],1),n("el-divider",{attrs:{direction:"vertical"}}),n("el-tooltip",{attrs:{effect:"light"}},[n("div",{attrs:{slot:"content"},slot:"content"},[n("el-input",{attrs:{type:"textarea",rows:"8"},model:{value:e.defaultStyle,callback:function(t){e.defaultStyle=t},expression:"defaultStyle"}})],1),n("el-button",{on:{click:function(t){return e.handleSetStyle()}}},[e._v("设置绘制图形的样式")])],1),e._v(" 设置样式后，重新绘制的图形即生效 "),n("div",{staticClass:"self-divider"}),n("el-button",{on:{click:function(t){return e.handleDrawShape("rectangle",!0)}}},[e._v("绘制矩形（单个）")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("polygon",!0)}}},[e._v("绘制多边形（单个）")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("circle",!0)}}},[e._v("绘制圆形（单个）")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("polyline",!0)}}},[e._v("绘制线段（单个）")]),n("el-button",{on:{click:function(t){return e.handleClearDraw()}}},[e._v("清除绘制图层")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("rectangle",!1)}}},[e._v("绘制矩形（多个）")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("polygon",!1)}}},[e._v("绘制多边形（多个）")]),n("el-button",{on:{click:function(t){return e.handleClearDraw(!1)}}},[e._v("结束编辑多个图形")]),n("div",{staticClass:"self-divider"}),e._v(" 面积（绘制的时候计算面积）： "),n("el-button",{on:{click:function(t){return e.handleDrawShape("polygon",!0,!0)}}},[e._v("计算多边形")]),n("el-button",{on:{click:function(t){return e.handleDrawShape("polyline",!0,!0)}}},[e._v("计算多线段")]),n("div",{staticStyle:{height:"500px","margin-top":"10px"}},[n("wang-leaflet",[n("wl-base-layer",{ref:"baseLayer"}),n("wl-edit-layer",{ref:"editLayer"})],1)],1),n("md",{staticClass:"markdown-body"})],1)},l=[],r=(n("ac1f"),n("5319"),function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)}),i=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h1",[e._v("调用代码")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v('代码调用，在html模板中这样调用即可：base和edit必须包含在wang-leaflet才能构成完整的地图渲染\n<wang-leaflet ref="leaflet">\n \t<wl-base-layer ref="baseLayer"></wl-base-layer>\n \t<wl-edit-layer ref="editLayer"></wl-edit-layer>\n</wang-leaflet>\n')])]),n("p",[e._v("补充说明：")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v('地图底图瓦片的渲染，不同服务的调用，一般在base-layer图层中开发\n编辑、绘制、渲染类的操作，在edit-layer中进行，edit-layer和base-layer一般，一个组件中可以有多个子组件的调用\n在开发中：可以一个功能放一个组件，在交互的时候处理起来会比较方便，\n比如label的渲染放一个，rigin的渲染放一个，table中数据的范围渲染放一个，交互的时候只关注对应的edit-layer组件即可，不用进行复杂的判断（一个地图中，哪些是table的，哪些是label的等）\n<wang-leaflet ref="leaflet">\n \t<wl-base-layer ref="baseLayer"></wl-base-layer>\n \t\x3c!-- 绘制图层 --\x3e\n \t<wl-edit-layer ref="editLayer"></wl-edit-layer>\n \t\x3c!-- 渲染label --\x3e\n \t<wl-edit-layer ref="lebelLayer"></wl-edit-layer>\n \t\x3c!-- 渲染table中每条数据的范围 --\x3e\n \t<wl-edit-layer ref="tableLayer"></wl-edit-layer>\n</wang-leaflet>\n')])]),n("h1",[e._v("说明文档正在编写中..................")])])}],o=n("2877"),s={},c=Object(o["a"])(s,r,i,!1,null,null,null),d=c.exports,u=n("5a1f"),f={components:{md:d},data:function(){return{wkt:"POLYGON ((112.346191 27.819731, 112.346191 31.508435, 119.069824 31.508435, 119.069824 27.819731, 112.346191 27.819731))",geoJson:'{\n    "type": "Polygon",\n    "coordinates": [\n        [\n            [112.346191, 27.819731],\n            [112.946191, 32.508435],\n            [119.969824, 32.508435],\n            [119.069824, 27.819731],\n            [112.346191, 27.819731]\n        ]\n    ]\n}',drawShapeMore:!1,defaultStyle:'{\n    "weight": 2,\n    "color": "#f00",\n    "opacity": 0.9,\n    "fillColor": "#f00",\n    "fillOpacity": 0\n}'}},computed:{spaceStyle:function(){var e=this.defaultStyle;return e=e.replace(/\s*/g,""),e=JSON.parse(e),e}},methods:{handleSetStyle:function(){var e=this.$refs.editLayer;e.setDrawStyle(this.spaceStyle),this.$message({message:"颜色设置成功",type:"success"})},handleChange:function(){this.drawShapeMore=!this.drawShapeMore},handleDrawShape:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this.$refs.editLayer;return t&&a.clearEditLayers(),a.setDrawShapeMore(!t),a.setEditType(e,n),a.setEditable(!0),!1},handleClearDraw:function(e){var t=this.$refs.editLayer;0!=e&&t.clearEditLayers(),t.setEditable(!1)},handleSetShape:function(e){var t="";if("wkt"===e)t=u.parse(this.wkt);else{var n=this.geoJson;n=n.replace(/\s*/g,""),t=JSON.parse(n),t={type:"Feature",properties:{},geometry:t}}var a=this.$refs.editLayer,l=a.setGeojsonParams(t,{style:this.spaceStyle});a.fitBounds(l)}}},p=f,h=p,y=(n("7204"),Object(o["a"])(h,a,l,!1,null,"22eeee83",null));t["default"]=y.exports},7204:function(e,t,n){"use strict";n("0dda")}}]);
//# sourceMappingURL=chunk-b3c4b43c.3e789de2.js.map